# Author Lawrencio Rasamoelison, Benjamin Demailly
To compile : 
	- go into the build directory : 
		* $ cd build
	- if changed system architecture delete all cmake files and directory :
		* $ rm cmake_install.cmake
		* $ rm -rf CMakeFiles
		* $ rm CMakeCache.txt
	- if first compilation run :
		* $ ./compile.sh all
		otherwise run:
		* $ ./compile.sh

NOTE : "$ ./compile.sh all" rewrite moc_**.cpp files which are generated and
used by Qt. If you happend to add another Qt elements which included the 
Q_OBJECT macro you need to add a line in build/compile.sh :
#following the precedent lines that has the same form
	moc -o ../src/moc_nameOfYourCppFile.cpp ../src/nameOfYourHFile.h
And then rerun "$ ./compile.sh all"
A file named ../src/moc_nameOfYourCppFile.cpp will then be automatically 
generated by Qt in the src directory 
(so every moc_**.cpp file doesn't need to be read to understand the program !)
This is due to the fact that this project was, since its origins, compiled with
cmake and not qmake

For advanced usage :
For convenience the script main.py is also present in the src directory, but 
please note that it must be present in the build directory (or configure the path
in the application during runtime)
In total, to run the script 4 path must be specified :
	- path to the main.py script (default to application directory : build)
	- path to naoqi
	- path to python (default /usr/bin/python)
	- path to shared memory (default /run/shm/nao.motors-tf)
(once the application running : Connection->Configuration, 
fill the corresponding fields or click the corresponding explore button)


For normal usage
As communication with NAO is done by Ethernet or Wifi, the following info
must be configured : 
	- choosen oscillator (vertical or horizontal)
	- choosen joint (number from 0 to 9)
	- NAO ip
	- NAO port
(once the application running : Connection->Configuration 
fill the corresponding fields)

To record video or data :
	- fill the corresponding fields "path" and "title" 
		or click in the explore button for path
		(you may also leave everything blank, this will record
		data or video in a file aside the application executable
		with a default name)
In title if you enter the name "output" for example, then the file 
will be name output.avi for the video, and output.csv for the data.
Their directory will be the one specified in the path field (our build directory
if you didn't specified any)
	
If you want to modify the program, you should first read our "rapport finale de pfe"
as it contains most of the information for the understanding of our program.
Also every .h file contains a short description of what it does 
and how it does it.
	    
